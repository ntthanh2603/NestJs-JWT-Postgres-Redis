version: '3.8'
services:
  # Database
  postgres:
    container_name: database
    image: postgres:latest
    environment:
      POSTGRES_USER: 'tuanthanh'
      POSTGRES_PASSWORD: '123456'
      POSTGRES_DB: 'database'
    ports:
      - "3001:5432"
    volumes:
      - postgres_data:/data/postgres
    networks:
      - app-network
    restart: unless-stopped

  # Backend
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # Database connection
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: 'tuanthanh'
      POSTGRES_PASSWORD: '123456'
      POSTGRES_NAME: 'database'
      # Node environment
      NODE_ENV: development
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    # command: npm run start:dev
    restart: unless-stopped

  # Frontend
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://api.yourdomain.com
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: