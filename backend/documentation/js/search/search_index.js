var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.544,1,2.076]],["body/controllers/AppController.html",[0,2.511,1,3.376,2,2.042,3,0.468,4,0.41,5,0.41,6,3.555,7,0.528,8,1.645,9,4.94,10,2.042,11,0.032,12,4.259,13,0.955,14,4.259,15,1.338,16,1.281,17,0.623,18,0.725,19,2.981,20,3.555,21,2.511,22,4.259,23,0.468,24,0.251,25,2.042,26,3.555,27,1.133,28,4.259,29,0.026,30,0.026]],["title/modules/AppModule.html",[31,1.298,32,2.076]],["body/modules/AppModule.html",[1,3.272,2,2.16,3,0.37,4,0.325,5,0.434,11,0.032,17,0.663,18,0.573,19,3.056,20,2.812,23,0.37,24,0.199,29,0.022,30,0.022,31,2.183,32,4.04,33,1.615,34,1.615,35,1.953,36,1.953,37,1.615,38,2.943,39,1.953,40,2.812,41,2.812,42,2.812,43,3.37,44,3.056,45,3.056,46,2.612,47,1.953,48,1.771,49,3.369,50,2.904,51,3.369,52,3.369,53,2.445,54,1.615,55,2.812,56,3.369,57,4.505,58,4.505,59,1.977,60,3.369,61,1.771,62,3.369,63,3.369,64,3.369,65,3.369,66,3.369,67,3.369,68,2.171,69,3.369,70,3.369,71,3.369,72,4.505,73,2.445,74,3.369,75,3.369]],["title/injectables/AppService.html",[19,1.693,76,0.399]],["body/injectables/AppService.html",[3,0.496,4,0.435,5,0.435,7,0.559,8,1.704,9,5.155,11,0.032,13,1.013,15,1.418,16,1.327,17,0.496,18,0.768,19,2.853,23,0.496,24,0.266,27,1.201,29,0.027,30,0.027,76,0.672,77,1.54,78,3.769,79,4.515,80,4.515]],["title/controllers/AuthController.html",[0,1.544,81,2.076]],["body/controllers/AuthController.html",[0,1.087,2,1.087,3,0.249,4,0.218,5,0.468,7,0.281,8,1.068,10,2.329,11,0.033,13,1.089,15,1.526,17,0.611,18,0.386,21,2.173,23,0.249,24,0.134,25,1.087,27,1.292,29,0.017,30,0.017,59,1.791,81,2.192,82,1.893,83,1.893,84,2.268,85,3.401,86,4.081,87,4.081,88,4.081,89,4.081,90,2.268,91,2.192,92,2.268,93,1.911,94,2.839,95,2.268,96,1.8,97,1.526,98,0.9,99,1.8,100,2.268,101,2.957,102,3.25,103,2.268,104,2.268,105,2.268,106,2.469,107,2.268,108,3.703,109,2.268,110,2.839,111,2.268,112,2.268,113,2.268,114,2.86,115,2.631,116,2.268,117,1.99,118,2.268,119,2.268,120,2.268,121,2.268,122,2.268,123,1.646,124,3.407,125,1.893,126,2.839,127,1.893,128,2.839,129,4.534,130,2.839,131,1.893,132,1.956,133,1.646,134,1.462,135,1.314,136,1.462,137,2.192,138,1.63,139,1.462,140,1.462,141,4.081,142,1.893,143,1.192,144,1.893,145,1.192,146,2.268,147,2.268,148,1.893,149,1.893,150,2.268,151,4.081,152,2.268,153,2.268,154,2.268,155,1.893,156,1.893,157,1.893,158,1.893,159,1.893,160,1.893,161,1.893,162,1.893,163,1.893,164,1.893,165,1.893,166,1.893,167,1.314,168,2.268,169,2.268,170,3.401,171,2.268,172,2.192,173,2.268,174,0.914,175,2.192,176,2.268,177,1.314,178,1.893,179,2.268,180,2.268,181,2.268,182,2.268,183,2.268]],["title/modules/AuthModule.html",[31,1.298,43,1.867]],["body/modules/AuthModule.html",[2,2.07,3,0.347,4,0.305,5,0.305,11,0.033,17,0.676,18,0.538,23,0.347,24,0.187,29,0.021,30,0.021,31,1.981,33,1.516,34,1.516,35,1.834,36,1.834,37,1.516,38,2.85,39,2.85,43,3.622,45,3,46,2.503,47,1.834,48,1.663,50,3.169,53,3.135,54,1.516,81,3.169,132,2.975,133,2.297,138,1.516,145,1.663,184,2.641,185,2.641,186,2.641,187,3.164,188,2.735,189,3.308,190,3.164,191,3.164,192,2.777,193,3.164,194,2.297,195,3.164,196,3.164,197,4.318,198,1.516,199,3.164,200,2.641,201,2.503,202,2.641,203,3.164,204,2.297,205,1.388,206,2.641,207,2.297,208,3.164,209,2.641,210,3.164,211,2.297,212,2.641,213,2.641]],["title/injectables/AuthService.html",[76,0.399,132,1.544]],["body/injectables/AuthService.html",[3,0.193,4,0.169,5,0.416,7,0.218,8,0.876,11,0.033,13,1.081,15,1.444,16,1.26,17,0.566,18,0.299,23,0.193,24,0.104,27,1.223,29,0.014,30,0.014,54,0.842,59,1.225,76,0.346,77,0.599,91,1.594,93,1.842,96,1.786,97,1.514,98,0.783,99,1.786,101,2.294,102,3.058,106,1.274,110,1.466,114,2.08,115,2.239,117,1.737,123,1.274,132,1.338,136,1.132,137,1.799,138,0.842,139,1.132,140,1.132,149,2.33,172,2.239,174,2.128,175,1.132,177,2.294,178,1.466,192,2.534,194,1.274,205,2.504,206,2.33,209,2.33,214,1.466,215,2.791,216,2.791,217,2.791,218,2.899,219,2.791,220,1.338,221,1.756,222,1.852,223,4.821,224,1.756,225,2.791,226,1.756,227,2.873,228,2.791,229,1.756,230,2.294,231,2.791,232,1.756,233,2.791,234,1.756,235,2.791,236,1.756,237,2.791,238,1.524,239,1.756,240,1.942,241,2.33,242,1.274,243,1.274,244,1.466,245,2.013,246,1.132,247,3.338,248,1.756,249,1.756,250,1.756,251,1.756,252,1.756,253,3.957,254,2.791,255,2.791,256,2.791,257,1.756,258,1.756,259,2.204,260,3.605,261,3.473,262,1.132,263,1.756,264,1.737,265,3.473,266,1.737,267,3.473,268,2.08,269,3.473,270,1.897,271,3.473,272,2.08,273,3.473,274,2.08,275,3.473,276,0.923,277,3.473,278,1.018,279,1.756,280,1.274,281,1.756,282,1.274,283,1.756,284,1.132,285,1.756,286,1.274,287,1.756,288,1.756,289,1.756,290,1.756,291,2.791,292,1.756,293,2.791,294,3.473,295,1.466,296,1.756,297,1.756,298,1.756,299,1.756,300,1.756,301,1.756,302,1.756,303,1.756,304,1.756,305,1.756,306,1.466,307,1.756,308,1.756,309,1.756,310,1.756,311,1.756,312,1.756,313,2.026,314,3.473,315,1.756,316,1.756,317,1.756,318,1.466,319,1.756,320,1.756,321,1.756]],["title/modules/DatabaseModule.html",[31,1.298,44,1.693]],["body/modules/DatabaseModule.html",[3,0.413,4,0.362,5,0.362,11,0.032,17,0.621,18,0.64,23,0.413,24,0.222,29,0.024,30,0.024,31,2.158,33,1.803,34,1.803,35,2.181,36,2.181,37,1.803,38,2.808,39,3.106,44,3.077,46,2.808,47,2.181,48,1.977,50,3.122,53,3.516,54,1.803,59,1.651,98,0.64,192,2.974,204,2.731,205,1.651,211,2.731,238,1.651,322,3.14,323,3.14,324,4.351,325,3.762,326,3.14,327,2.425,328,3.889,329,3.762,330,3.762,331,3.14,332,3.14,333,3.14,334,3.14,335,3.14,336,3.14,337,3.14,338,3.14,339,3.14,340,3.14,341,2.425,342,3.14,343,3.14,344,3.14]],["title/interfaces/IUser.html",[91,1.298,345,1.693]],["body/interfaces/IUser.html",[3,0.353,4,0.31,5,0.31,7,0.399,11,0.032,16,1.589,17,0.353,23,0.353,29,0.022,30,0.022,91,1.759,98,1.077,240,2.143,259,2.549,262,3.428,264,2.334,266,2.334,268,2.796,270,2.549,272,2.796,274,2.796,276,2.796,278,3.083,280,3.861,282,3.861,284,3.428,345,1.691,346,2.335,347,2.685,348,1.618,349,5.319,350,3.181,351,3.599,352,3.083,353,3.083,354,3.861,355,1.864]],["title/injectables/JwtAuthGuard.html",[76,0.399,356,2.338]],["body/injectables/JwtAuthGuard.html",[3,0.4,4,0.239,5,0.239,7,0.308,8,1.143,11,0.033,13,0.966,15,1.489,17,0.521,18,0.423,21,2.419,23,0.273,24,0.147,25,1.191,27,1.261,29,0.018,30,0.018,59,1.597,61,1.306,76,0.451,77,0.847,93,1.9,94,2.074,96,1.595,97,1.352,98,0.619,99,1.595,108,1.803,117,1.09,135,1.44,167,1.44,174,1.001,177,2.496,198,1.191,220,1.191,242,1.803,313,1.803,356,2.641,357,3.957,358,1.803,359,2.109,360,3.639,361,4.306,362,3.639,363,2.074,364,3.828,365,2.484,366,3.639,367,3.056,368,2.484,369,3.639,370,3.639,371,3.639,372,3.639,373,3.639,374,3.126,375,3.639,376,2.484,377,3.639,378,3.639,379,3.639,380,3.639,381,3.639,382,4.741,383,1.601,384,2.074,385,1.803,386,2.074,387,1.601,388,3.038,389,4.548,390,2.074,391,2.484,392,1.44,393,1.44,394,1.601,395,2.484,396,2.484,397,2.484,398,2.484,399,1.306,400,2.484,401,2.484,402,1.601,403,3.639,404,3.639,405,3.639,406,3.038,407,2.484,408,2.484,409,5.047,410,4.741,411,5.448,412,3.957,413,2.484,414,2.484,415,2.484,416,3.038,417,2.484,418,1.803,419,2.484,420,2.484,421,2.484,422,2.484,423,2.641,424,3.639,425,3.639,426,2.484,427,2.484,428,2.484,429,2.484,430,1.601,431,2.484,432,2.484,433,2.484]],["title/injectables/JwtStrategy.html",[76,0.399,188,1.544]],["body/injectables/JwtStrategy.html",[3,0.345,4,0.303,5,0.303,7,0.389,8,1.35,11,0.033,13,0.964,15,0.987,17,0.626,18,0.535,23,0.345,24,0.185,27,0.836,29,0.021,30,0.021,54,1.506,76,0.533,77,1.071,91,2.122,96,1.592,97,1.35,98,0.731,99,1.592,139,2.025,167,1.821,172,2.025,174,1.266,188,2.348,192,2.993,198,1.506,205,2.15,207,2.281,220,2.06,222,2.349,227,3.823,230,1.821,240,1.266,243,2.281,245,2.491,246,2.77,259,1.506,264,1.379,266,1.379,359,2.491,387,2.77,392,2.84,393,2.84,394,2.77,399,1.651,402,2.025,430,2.025,434,2.623,435,3.12,436,2.623,437,3.142,438,3.588,439,3.142,440,2.281,441,2.623,442,2.025,443,4.089,444,2.623,445,3.556,446,4.089,447,2.623,448,2.623,449,2.623,450,2.623,451,2.623,452,2.623,453,1.821,454,3.142,455,2.623,456,2.281,457,2.281,458,2.623,459,2.623,460,2.623,461,2.623,462,2.623,463,2.623,464,2.623,465,2.623,466,2.623]],["title/injectables/JwtStrategy-1.html",[76,0.335,188,1.295,467,1.742]],["body/injectables/JwtStrategy-1.html",[3,0.345,4,0.303,5,0.303,7,0.389,8,1.35,11,0.033,13,0.964,15,0.987,17,0.626,18,0.535,23,0.345,24,0.185,27,0.836,29,0.021,30,0.021,54,1.506,76,0.533,77,1.071,91,2.122,96,1.592,97,1.35,98,0.731,99,1.592,139,2.025,167,1.821,172,2.025,174,1.266,188,2.348,192,2.993,198,1.506,205,2.15,207,2.281,220,2.06,222,2.349,227,3.823,230,1.821,240,1.266,243,2.281,245,2.491,246,2.77,259,1.506,264,1.379,266,1.379,359,2.491,387,2.77,392,2.84,393,2.84,394,2.77,399,1.651,402,2.025,430,2.025,435,3.12,436,2.623,438,3.588,440,2.281,441,2.623,442,2.025,443,4.089,444,2.623,445,3.556,446,4.089,447,2.623,448,2.623,449,2.623,450,2.623,451,2.623,452,2.623,453,1.821,455,2.623,456,2.281,457,2.281,458,2.623,459,2.623,460,2.623,461,2.623,462,2.623,463,2.623,464,2.623,465,2.623,466,2.623,468,2.623,469,3.142,470,3.142,471,3.142]],["title/injectables/LocalAuthGuard.html",[76,0.399,472,2.338]],["body/injectables/LocalAuthGuard.html",[3,0.493,4,0.432,5,0.432,11,0.032,17,0.594,18,0.763,23,0.493,24,0.265,29,0.027,30,0.027,61,2.358,76,0.67,77,1.53,198,2.15,358,3.256,359,3.133,384,3.744,386,3.744,387,2.891,388,3.744,389,3.744,390,3.744,392,2.6,393,2.6,472,3.924,473,3.744,474,5.405,475,3.256]],["title/injectables/LocalStrategy.html",[76,0.399,189,1.867]],["body/injectables/LocalStrategy.html",[3,0.383,4,0.336,5,0.336,7,0.432,8,1.449,11,0.032,13,1.034,15,1.096,16,1.436,17,0.628,18,0.594,23,0.383,24,0.206,25,1.673,27,0.929,29,0.023,30,0.023,73,2.534,76,0.572,77,1.19,93,1.726,96,1.709,97,1.449,98,0.785,99,1.709,117,1.532,132,2.815,133,2.534,174,1.406,177,2.023,189,2.674,198,1.673,205,2.267,220,1.673,238,2.508,240,1.858,241,3.851,242,2.534,244,2.913,246,2.973,247,2.534,313,2.534,359,2.674,392,2.023,393,2.674,402,2.25,430,2.25,435,3.348,440,2.534,442,2.25,445,2.534,475,3.348,476,2.913,477,3.49,478,3.49,479,4.613,480,3.49,481,3.49,482,3.49,483,3.49,484,3.49,485,3.49,486,3.49]],["title/classes/LoginUserDto.html",[24,0.19,101,1.867]],["body/classes/LoginUserDto.html",[3,0.34,4,0.298,5,0.298,7,0.383,10,2.037,11,0.032,13,0.953,16,1.385,17,0.467,23,0.34,24,0.251,29,0.021,30,0.021,61,3.108,68,3.914,73,3.085,98,0.965,101,2.464,140,3.131,143,1.625,238,2.548,240,2.47,348,1.575,399,2.234,453,2.464,456,3.085,457,2.244,487,1.993,488,1.993,489,4.251,490,3.091,491,3.191,492,3.091,493,4.251,494,3.548,495,3.032,496,3.091,497,4.731,498,4.731,499,3.091,500,4.251,501,3.797,502,3.091,503,4.251,504,3.548,505,3.091,506,3.548,507,3.091,508,3.526,509,3.548,510,3.526,511,3.526,512,1.993,513,1.993,514,1.792,515,3.548,516,2.74,517,2.244,518,2.581]],["title/injectables/MulterConfigService.html",[76,0.399,201,1.867]],["body/injectables/MulterConfigService.html",[3,0.319,4,0.28,5,0.491,7,0.36,8,1.279,11,0.033,13,1.054,15,1.279,16,1.149,17,0.589,18,0.495,23,0.319,24,0.171,27,1.25,29,0.02,30,0.02,59,1.275,76,0.504,77,0.991,96,1.076,97,1.476,98,0.495,99,1.076,128,3.399,138,1.393,145,1.527,174,1.171,201,2.36,348,1.508,423,3.893,519,2.425,520,4.7,521,5.093,522,4.072,523,2.906,524,4.7,525,4.072,526,2.906,527,2.906,528,2.906,529,3.03,530,1.873,531,2.906,532,4.072,533,4.072,534,2.906,535,3.399,536,4.072,537,2.109,538,2.906,539,2.906,540,2.906,541,2.906,542,2.906,543,2.906,544,3.399,545,3.399,546,2.906,547,2.906,548,4.072,549,2.906,550,2.906,551,2.906,552,2.906,553,2.906,554,4.7,555,2.906,556,2.906,557,2.906,558,2.906,559,2.906,560,2.906,561,2.906,562,2.906,563,2.906,564,2.906,565,2.906,566,2.906,567,2.906,568,2.906,569,4.072,570,2.906,571,2.906,572,2.906,573,4.072,574,2.906,575,2.906,576,2.906,577,2.425,578,4.072,579,4.072,580,2.906,581,2.906,582,2.906,583,4.072,584,2.906,585,4.072,586,2.906]],["title/classes/RegisterUserDto.html",[24,0.19,114,1.693]],["body/classes/RegisterUserDto.html",[3,0.215,4,0.189,5,0.189,7,0.243,10,2.557,11,0.032,13,1.196,16,1.413,17,0.41,23,0.215,24,0.179,29,0.015,30,0.015,61,3.096,68,3.797,97,1.632,98,0.908,114,1.599,136,3.515,143,1.03,238,1.997,240,2.025,264,1.636,266,1.636,268,2.731,270,2.015,272,2.209,274,2.209,276,2.209,348,1.127,350,1.599,352,2.161,355,1.136,399,2.532,453,2.437,467,1.263,487,1.263,488,1.263,491,3.096,494,2.539,495,3.466,497,2.539,498,2.539,501,3.771,506,2.539,508,3.958,509,2.539,510,3.303,511,3.303,512,1.263,513,1.263,514,1.136,515,2.539,516,3.439,517,1.422,518,1.635,587,3.799,588,2.539,589,2.539,590,2.539,591,2.539,592,1.635,593,3.509,594,4.707,595,3.509,596,2.539,597,4.02,598,3.799,599,2.539,600,1.959,601,2.539,602,1.635,603,3.509,604,1.635,605,1.635,606,1.635,607,2.539,608,2.539,609,1.635,610,1.959,611,1.959,612,3.042,613,1.635,614,2.539,615,3.509,616,2.539,617,2.539,618,1.959,619,1.422,620,1.635,621,1.959,622,3.509,623,2.539,624,1.959,625,1.959,626,1.635,627,2.539,628,1.635,629,1.959,630,4.02,631,1.635,632,1.635,633,2.539,634,2.539,635,2.539,636,3.112,637,3.112,638,1.635,639,1.635,640,1.635]],["title/interfaces/Response.html",[102,1.693,345,1.693]],["body/interfaces/Response.html",[3,0.411,4,0.36,5,0.36,7,0.464,11,0.033,16,0.915,17,0.642,18,0.637,23,0.53,24,0.221,25,1.793,27,0.995,29,0.024,30,0.024,76,0.598,98,0.822,102,2.537,135,2.169,345,1.966,346,2.716,348,1.788,350,2.809,364,3.879,367,3.111,374,2.716,383,2.411,418,2.716,491,2.537,537,2.716,641,2.716,642,4.344,643,4.879,644,4.029,645,4.029,646,4.029,647,2.716,648,3.123,649,3.123,650,2.411,651,2.411,652,3.123,653,3.123,654,3.123,655,3.123,656,3.123,657,3.123]],["title/injectables/TransformInterceptor.html",[76,0.399,651,2.076]],["body/injectables/TransformInterceptor.html",[3,0.389,4,0.342,5,0.342,7,0.439,8,1.464,11,0.033,13,1.045,15,1.113,16,0.867,17,0.631,18,0.603,23,0.512,24,0.209,25,1.699,27,0.943,29,0.023,30,0.023,76,0.577,77,1.209,96,1.727,97,1.464,98,0.793,99,1.727,102,1.863,135,2.055,220,1.699,345,1.863,350,1.863,363,2.959,364,4.281,367,3.565,374,3.383,383,2.285,418,2.573,491,2.45,537,2.573,641,2.573,642,3.779,643,3.89,644,3.89,645,4.617,646,4.346,647,2.573,648,2.959,649,2.959,650,2.285,651,3.004,652,4.346,653,4.346,654,2.959,655,2.959,656,2.959,657,2.959,658,3.545,659,3.545,660,3.545]],["title/classes/UpdateUserDto.html",[24,0.19,661,1.867]],["body/classes/UpdateUserDto.html",[3,0.232,4,0.203,5,0.203,7,0.262,10,2.551,11,0.032,13,1.194,16,1.36,17,0.429,23,0.232,24,0.19,29,0.016,30,0.016,61,3.016,68,3.699,97,1.672,98,0.906,143,1.11,264,1.715,266,1.715,268,2.798,270,2.096,272,2.299,274,2.299,276,2.299,278,2.535,348,1.194,350,1.694,352,2.265,353,2.265,355,1.224,399,2.609,453,2.535,467,1.361,487,1.361,488,1.361,491,3.085,495,3.462,501,3.864,508,3.96,510,2.837,511,2.837,512,1.361,513,1.361,514,1.224,516,3.431,587,4.143,588,2.69,589,2.69,590,2.69,591,2.69,592,1.763,593,3.65,594,4.79,595,3.65,596,2.69,597,4.143,598,3.931,599,2.69,601,2.69,602,1.763,603,3.65,604,1.763,605,1.763,606,1.763,607,2.69,608,2.69,609,1.763,613,1.763,614,2.69,615,3.65,616,2.69,617,2.69,619,2.339,620,1.763,622,3.65,623,2.69,626,1.763,627,2.69,628,1.763,630,4.31,631,1.763,632,1.763,633,2.69,634,2.69,635,2.69,636,3.262,637,3.262,638,1.763,639,1.763,640,1.763,661,1.868,662,4.553,663,2.112,664,2.112,665,2.112,666,2.112,667,2.112,668,2.112,669,1.533]],["title/entities/User.html",[93,1.012,670,2.338]],["body/entities/User.html",[3,0.246,4,0.216,5,0.216,7,0.277,10,2.928,11,0.032,13,1.37,16,1.509,17,0.445,23,0.246,24,0.199,29,0.017,30,0.017,59,1.478,93,1.058,98,1.059,175,2.61,238,1.777,240,1.631,259,1.941,262,2.61,264,1.777,266,1.777,268,2.128,270,1.941,272,2.128,274,2.128,276,2.128,278,2.347,280,2.939,282,2.939,284,2.61,286,2.939,341,1.442,348,1.247,350,2.668,351,3.27,352,2.8,353,2.8,354,3.506,355,1.297,512,1.442,513,1.442,514,1.297,517,1.624,529,3.698,619,3.823,669,1.624,670,2.444,671,1.868,672,4.049,673,6.223,674,2.238,675,4.504,676,3.367,677,2.238,678,5.266,679,2.238,680,2.238,681,2.238,682,2.238,683,2.238,684,2.238,685,3.76,686,2.238,687,2.238,688,5.813,689,2.238,690,3.367,691,2.238,692,2.238,693,2.238,694,2.238,695,2.238,696,2.238,697,2.238,698,2.238,699,2.238,700,2.238,701,1.624,702,2.238,703,2.238,704,4.032,705,2.238]],["title/controllers/UsersController.html",[0,1.544,706,2.076]],["body/controllers/UsersController.html",[0,1.502,2,1.502,3,0.344,4,0.302,5,0.531,7,0.388,8,1.348,10,2.057,11,0.033,13,0.962,15,1.348,16,1.196,17,0.64,18,0.533,21,2.057,23,0.344,24,0.185,25,1.502,26,2.616,27,1.142,29,0.021,30,0.021,83,2.616,91,2.12,93,1.863,96,1.59,97,1.348,98,0.73,99,1.59,115,3.154,117,1.375,124,3.582,125,2.616,126,3.582,130,3.582,131,2.616,134,2.02,135,1.817,137,2.02,138,1.502,142,2.616,143,1.648,144,2.616,145,1.648,148,2.616,155,2.616,156,2.616,157,2.616,158,2.616,159,2.616,160,2.616,161,2.616,162,2.616,163,2.616,164,2.616,165,2.616,166,2.616,167,1.817,222,1.971,259,2.057,412,2.616,661,3.299,706,2.766,707,2.616,708,3.134,709,3.582,710,4.893,711,2.616,712,3.134,713,4.291,714,3.134,715,3.134,716,3.134,717,3.134,718,3.134,719,4.291,720,2.616,721,2.616,722,2.616,723,3.134,724,3.134,725,3.134,726,3.134,727,3.134,728,3.134,729,3.134]],["title/modules/UsersModule.html",[31,1.298,45,1.693]],["body/modules/UsersModule.html",[2,2.257,3,0.396,4,0.347,5,0.347,11,0.032,17,0.672,18,0.613,23,0.396,24,0.212,29,0.023,30,0.023,31,2.114,33,1.726,34,1.726,35,2.088,36,2.088,37,1.726,38,3.042,39,3.042,44,3.114,45,3.253,46,2.73,47,2.088,48,1.893,50,3.035,55,3.007,93,1.131,138,1.726,145,1.893,200,3.007,201,2.73,202,3.007,212,3.007,213,3.007,222,2.551,326,3.007,327,2.322,706,3.382,720,3.007,730,3.007,731,3.007,732,3.602,733,3.007,734,3.602,735,3.602,736,3.007,737,3.602]],["title/injectables/UsersService.html",[76,0.399,222,1.298]],["body/injectables/UsersService.html",[3,0.202,4,0.177,5,0.504,7,0.228,8,0.91,11,0.033,13,1.174,15,1.388,16,1.423,17,0.588,18,0.313,23,0.202,24,0.109,27,1.453,29,0.014,30,0.014,76,0.359,77,0.628,91,1.637,93,1.542,96,1.739,97,1.474,98,0.799,99,1.739,106,3.208,114,2.136,115,3.026,117,1.272,123,1.337,137,1.868,174,2.109,175,2.849,177,1.068,205,2.472,218,2.419,220,1.389,222,1.168,230,2.356,238,1.573,240,1.781,245,1.068,247,3.693,259,2.25,260,2.419,262,3.374,264,0.808,266,0.808,268,0.968,270,0.883,272,1.523,274,1.523,276,1.523,278,1.68,284,1.868,286,1.337,295,1.537,306,1.537,318,1.537,327,1.187,348,1.074,351,1.337,353,1.068,355,1.068,423,2.104,529,2.31,530,2.31,535,2.419,544,1.537,545,1.537,661,2.356,669,1.337,701,1.337,704,2.992,709,2.419,711,2.419,721,1.537,722,1.537,736,1.537,738,1.537,739,3.584,740,3.584,741,3.584,742,2.898,743,2.898,744,3.584,745,1.842,746,3.393,747,1.842,748,2.898,749,2.898,750,1.842,751,1.842,752,2.898,753,4.694,754,1.842,755,2.898,756,1.842,757,1.842,758,1.842,759,1.842,760,1.842,761,1.842,762,1.842,763,1.842,764,1.842,765,1.842,766,1.537,767,1.842,768,1.842,769,2.898,770,1.842,771,1.842,772,1.842,773,3.584,774,3.584,775,2.898,776,1.842,777,3.584,778,1.842,779,2.898,780,1.842,781,2.898,782,1.842,783,1.842,784,1.842,785,1.842,786,1.842,787,1.842,788,1.842,789,2.898,790,1.842,791,1.842,792,1.842,793,1.842,794,1.842,795,1.842,796,1.842,797,1.842,798,1.842,799,1.842,800,1.842]],["title/coverage.html",[801,3.173]],["body/coverage.html",[0,2.337,1,2.006,5,0.3,6,2.598,11,0.032,19,1.636,21,1.492,24,0.288,29,0.021,30,0.021,37,1.492,76,0.753,78,2.598,81,2.006,82,2.598,91,1.254,93,1.341,98,0.53,101,1.804,102,1.636,114,1.636,117,1.366,132,1.492,134,2.006,136,2.006,140,2.006,188,2.047,189,1.804,201,1.804,214,2.598,222,1.254,328,2.26,345,2.245,347,2.598,356,2.26,357,2.598,358,3.1,385,2.26,434,2.598,468,2.598,472,2.26,473,2.598,476,2.598,488,3.142,519,2.598,641,3.1,650,2.006,651,2.006,661,1.804,662,2.598,670,2.26,671,2.598,685,5.42,706,2.006,707,2.598,738,2.598,801,2.26,802,2.598,803,3.113,804,3.113,805,4.271,806,3.113,807,3.113,808,3.113,809,3.113,810,6.009,811,5.816,812,3.113,813,2.598,814,5.679,815,4.589,816,2.598,817,3.113,818,4.271,819,3.113,820,3.113,821,3.113,822,3.113]],["title/dependencies.html",[34,1.854,823,2.255]],["body/dependencies.html",[11,0.033,18,0.684,24,0.298,29,0.025,30,0.025,34,1.926,54,1.926,138,1.926,143,2.112,145,2.112,194,2.917,198,1.926,327,2.591,383,2.591,394,2.591,442,3.562,475,2.917,514,2.33,647,2.917,701,2.917,766,3.355,824,5.526,825,4.019,826,4.019,827,4.019,828,4.019,829,4.019,830,4.019,831,4.019,832,4.019,833,4.019,834,4.019,835,4.019,836,4.019,837,4.019,838,4.019,839,4.019,840,4.019,841,4.019,842,4.019,843,4.019,844,4.019,845,4.019,846,4.019,847,4.019,848,4.019,849,4.019,850,4.019]],["title/miscellaneous/enumerations.html",[851,1.42,852,3.228]],["body/miscellaneous/enumerations.html",[7,0.421,11,0.032,21,2.17,29,0.022,30,0.022,93,1.707,127,3.78,245,2.625,352,2.625,353,2.625,354,3.287,530,4.226,577,3.78,851,1.784,852,2.833,853,6.18,854,4.528,855,4.528,856,4.528,857,4.528,858,4.528,859,4.528,860,4.528,861,3.394,862,4.528,863,4.528,864,3.78,865,4.528,866,5.436,867,4.528,868,4.528,869,4.528,870,4.528,871,4.528,872,4.528,873,4.528,874,4.528,875,4.528,876,3.78,877,4.528]],["title/miscellaneous/functions.html",[851,1.42,878,3.228]],["body/miscellaneous/functions.html",[7,0.615,11,0.028,29,0.028,30,0.028,37,2.901,816,4.142,851,2.608,878,4.142,879,4.962]],["title/index.html",[7,0.335,880,2.702,881,2.702]],["body/index.html",[4,0.302,11,0.031,29,0.021,30,0.021,48,2.766,270,1.502,406,4.392,495,1.817,516,3.154,746,2.616,801,2.275,802,2.616,864,2.616,876,2.616,882,3.134,883,3.134,884,4.893,885,3.134,886,3.134,887,3.134,888,3.134,889,3.134,890,3.134,891,4.893,892,3.134,893,3.134,894,5.262,895,3.134,896,5.827,897,3.134,898,5.827,899,3.134,900,3.134,901,3.134,902,4.291,903,3.134,904,3.134,905,3.134,906,4.893,907,3.134,908,4.291,909,3.134,910,3.134,911,3.134,912,3.134,913,3.134,914,3.134,915,3.134,916,3.134,917,5.262,918,4.291,919,3.134,920,4.893,921,3.134,922,4.392,923,4.291,924,3.134,925,3.134,926,3.134,927,3.134,928,3.134,929,3.134,930,4.893,931,3.134,932,3.134,933,4.291,934,3.134,935,3.134,936,3.134,937,4.893,938,3.134,939,3.134,940,3.134,941,3.134,942,3.134,943,3.134,944,3.134,945,4.291,946,3.134,947,3.134,948,3.134,949,3.134,950,3.134,951,4.291,952,3.134,953,3.134,954,3.134,955,4.291,956,4.291,957,3.134,958,3.134,959,3.134,960,3.134,961,3.134,962,3.134,963,3.134,964,3.134,965,3.134,966,3.134,967,3.134,968,2.616,969,3.134,970,3.134,971,3.134,972,3.134,973,3.134,974,2.616]],["title/modules.html",[33,2.095]],["body/modules.html",[11,0.028,29,0.028,30,0.028,32,3.053,33,2.27,43,2.746,44,2.49,45,2.49,922,5.119,975,6.132,976,6.132,977,6.132]],["title/overview.html",[978,3.649]],["body/overview.html",[2,1.726,11,0.032,19,2.758,29,0.023,30,0.023,31,1.451,32,4.026,33,1.726,34,1.726,35,2.088,36,2.088,37,1.726,38,2.088,39,2.088,40,3.007,41,3.007,42,3.007,43,3.67,44,3.035,45,3.253,46,2.73,47,2.088,48,1.893,77,1.228,132,2.893,184,3.007,185,3.007,186,3.007,188,2.515,189,3.042,222,2.431,322,3.007,323,3.007,324,4.039,341,2.322,346,2.614,467,2.322,487,2.322,504,3.007,730,3.007,731,3.007,733,3.007,978,3.007,979,3.602,980,4.709,981,3.602]],["title/properties.html",[348,1.433,823,2.255]],["body/properties.html",[11,0.032,29,0.028,30,0.028,348,1.818,495,2.845,968,4.097,974,4.097,982,4.908,983,4.908,984,4.908]],["title/miscellaneous/variables.html",[851,1.42,985,3.228]],["body/miscellaneous/variables.html",[7,0.439,11,0.033,16,1.273,21,2.234,27,1.24,29,0.023,30,0.023,59,2.045,93,1.464,98,0.941,108,2.573,117,1.556,134,3.004,174,1.877,192,2.737,204,2.573,205,1.556,211,2.573,230,2.055,238,1.556,324,2.573,328,3.383,331,2.959,332,2.959,333,2.959,334,2.959,335,2.959,336,2.959,337,2.959,338,2.959,339,2.959,340,2.959,341,2.285,342,2.959,343,2.959,344,2.959,367,2.285,385,3.383,416,2.959,491,2.45,529,3.802,530,3.802,642,2.573,650,3.356,813,2.959,815,2.959,851,1.863,985,2.959,986,3.545,987,5.745,988,3.545,989,3.545,990,4.661,991,3.545,992,3.545,993,3.545,994,3.545,995,3.545,996,3.545,997,3.545]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":685,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["0.0.1",{"_index":983,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["072d02e22adc",{"_index":381,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["0c9ce90c",{"_index":377,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["1",{"_index":467,"title":{"injectables/JwtStrategy-1.html":{}},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["1'})@isoptional",{"_index":605,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["1.0.0",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":504,"title":{},"body":{"classes/LoginUserDto.html":{},"overview.html":{}}}],["10.0.0",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":598,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["100'})@min(1",{"_index":604,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["1000",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["1024",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["12345678",{"_index":506,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["15m",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":981,"title":{},"body":{"overview.html":{}}}],["2/4",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":601,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["3",{"_index":980,"title":{},"body":{"overview.html":{}}}],["3.11.3",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["3108b462",{"_index":369,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["335a",{"_index":378,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["4",{"_index":979,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["4b00",{"_index":371,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["4c7e",{"_index":379,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["5",{"_index":595,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["5.1.1",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["7.4.2",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":500,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["8.13.0",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["82ee",{"_index":370,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["99be",{"_index":380,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["__dirname",{"_index":342,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":415,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["access_token",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["addfiletypevalidator",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["additional",{"_index":428,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["addmaxsizevalidator",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["addres",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["address'})@minlength(5",{"_index":592,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["admin",{"_index":866,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["age",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["age'})@max(100",{"_index":602,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["allowed",{"_index":414,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["already",{"_index":544,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{}}}],["amazing",{"_index":961,"title":{},"body":{"index.html":{}}}],["angry",{"_index":874,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apibody",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":508,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty({example",{"_index":587,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apitags",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('users",{"_index":723,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":933,"title":{},"body":{"index.html":{}}}],["applications",{"_index":890,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":32,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":19,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":358,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:14",{"_index":365,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:29",{"_index":368,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:53",{"_index":376,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":81,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":411,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authentication",{"_index":409,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard",{"_index":384,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":360,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":474,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":43,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":968,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":455,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["authservice",{"_index":132,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["await",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":397,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["backers",{"_index":962,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('invalid",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception('refresh",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["badrequestexception('user",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["badrequestexception(`email",{"_index":778,"title":{},"body":{"injectables/UsersService.html":{}}}],["basename",{"_index":583,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcf0",{"_index":372,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["bcrypt",{"_index":766,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bearer",{"_index":458,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["bio",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["bio'})@minlength(5",{"_index":609,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["board",{"_index":954,"title":{},"body":{"index.html":{}}}],["body",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["boy",{"_index":608,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["break",{"_index":554,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":977,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":975,"title":{},"body":{"modules.html":{}}}],["build",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["building",{"_index":885,"title":{},"body":{"index.html":{}}}],["bypass",{"_index":408,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["bảo",{"_index":386,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["c",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["called",{"_index":421,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["callhandler",{"_index":645,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":361,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":366,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":548,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["cau",{"_index":588,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["cb",{"_index":569,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":573,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ch",{"_index":593,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["channel",{"_index":925,"title":{},"body":{"index.html":{}}}],["check",{"_index":406,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["chiến",{"_index":445,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{}}}],["cho",{"_index":395,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["chưa",{"_index":484,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["class",{"_index":24,"title":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":487,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":322,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_exports",{"_index":323,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":730,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":731,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":732,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":733,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["codeium",{"_index":403,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["column",{"_index":673,"title":{},"body":{"entities/User.html":{}}}],["column()@minlength(8)@maxlength(15",{"_index":693,"title":{},"body":{"entities/User.html":{}}}],["column({default",{"_index":678,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":675,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":682,"title":{},"body":{"entities/User.html":{}}}],["come",{"_index":914,"title":{},"body":{"index.html":{}}}],["command",{"_index":404,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["comment",{"_index":869,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comparesync",{"_index":763,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":772,"title":{},"body":{"injectables/UsersService.html":{}}}],["completes",{"_index":422,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["config",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["configmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('database_host",{"_index":333,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('database_name",{"_index":340,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('database_password",{"_index":338,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('database_port",{"_index":335,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('database_username",{"_index":337,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('jwt_access_expire",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["console.error('error",{"_index":798,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.error(error",{"_index":566,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":541,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["const",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":477,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(configservice",{"_index":436,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":363,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(usersrepository",{"_index":745,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":558,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["context",{"_index":374,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":419,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":418,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":656,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('/auth",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('users",{"_index":724,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["courses",{"_index":931,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":801,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":563,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["created",{"_index":543,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["createmulteroptions",{"_index":521,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrefreshtoken",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["createrefreshtoken(payload",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":407,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["các",{"_index":388,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["cấu",{"_index":449,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["cần",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["cầu",{"_index":391,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["data",{"_index":642,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["data_source",{"_index":324,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":339,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database.providers",{"_index":329,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["databasemodule",{"_index":44,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":328,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.initialize",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":351,"title":{},"body":{"interfaces/IUser.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["date.now()}${extname",{"_index":586,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["declarations",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator/customize",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":927,"title":{},"body":{"index.html":{}}}],["default",{"_index":529,"title":{},"body":{"injectables/MulterConfigService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleting",{"_index":799,"title":{},"body":{"injectables/UsersService.html":{}}}],["denied",{"_index":565,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":495,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":568,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["development",{"_index":899,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":939,"title":{},"body":{"index.html":{}}}],["dir",{"_index":560,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["directory",{"_index":553,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["discord",{"_index":924,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":533,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dive",{"_index":926,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":802,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["dto.address",{"_index":788,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.age",{"_index":786,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.bio",{"_index":784,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.email",{"_index":777,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.first_name",{"_index":782,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.gender",{"_index":787,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.last_name",{"_index":783,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.password",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto.website",{"_index":785,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/create",{"_index":767,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/update",{"_index":722,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["during",{"_index":427,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["dùng",{"_index":443,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["dưới",{"_index":456,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"classes/LoginUserDto.html":{}}}],["dạng",{"_index":457,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"classes/LoginUserDto.html":{}}}],["dạng'})@isstring({message",{"_index":492,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["dấu",{"_index":400,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["dẫn",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["dụng",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["e26c4709ab3c",{"_index":373,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["e2e",{"_index":909,"title":{},"body":{"index.html":{}}}],["eexist",{"_index":549,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["efficient",{"_index":886,"title":{},"body":{"index.html":{}}}],["email",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["empty",{"_index":635,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["empty'})@apiproperty({example",{"_index":616,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["enotdir",{"_index":555,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":522,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":525,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["enterprise",{"_index":944,"title":{},"body":{"index.html":{}}}],["entities",{"_index":341,"title":{},"body":{"modules/DatabaseModule.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/user.entity",{"_index":736,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":670,"title":{"entities/User.html":{}},"body":{"entities/User.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":343,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":688,"title":{},"body":{"entities/User.html":{}}}],["enumerations",{"_index":852,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":382,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":423,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{}}}],["error.code",{"_index":547,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhttpstatuscode",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["example",{"_index":516,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"index.html":{}}}],["exception",{"_index":425,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["execution",{"_index":413,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["executioncontext",{"_index":367,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":545,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{}}}],["experience",{"_index":929,"title":{},"body":{"index.html":{}}}],["expired",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["extends",{"_index":359,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["extension",{"_index":578,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":579,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":441,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":460,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["false",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/UsersController.html":{}}}],["female",{"_index":863,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["few",{"_index":912,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["file.path",{"_index":781,"title":{},"body":{"injectables/UsersService.html":{}}}],["fileinterceptor",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["fileisrequired",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["filename",{"_index":576,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["filetype",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["finalname",{"_index":585,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["finduser",{"_index":793,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduser.avatar",{"_index":795,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyemail",{"_index":742,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyemail(email",{"_index":749,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyid",{"_index":709,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["finduserbyid(@param('id",{"_index":726,"title":{},"body":{"controllers/UsersController.html":{}}}],["finduserbyid(id",{"_index":711,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["finduserbytoken",{"_index":739,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":615,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["first_name",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["folder",{"_index":570,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["follow",{"_index":876,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["followed_count",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"entities/User.html":{}}}],["follower",{"_index":877,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["follower_count",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"entities/User.html":{}}}],["found",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":884,"title":{},"body":{"index.html":{}}}],["friend",{"_index":875,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fs",{"_index":535,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{}}}],["fs.existssync(avatar",{"_index":796,"title":{},"body":{"injectables/UsersService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":539,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.unlinksync(avatar",{"_index":797,"title":{},"body":{"injectables/UsersService.html":{}}}],["full",{"_index":943,"title":{},"body":{"index.html":{}}}],["function",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":878,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["gender'})@isoptional",{"_index":620,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["gendertype",{"_index":352,"title":{},"body":{"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["gendertype.male",{"_index":640,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["gensaltsync",{"_index":764,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":770,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/account",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/account')@responsemessage('get",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/refresh",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':user_id",{"_index":725,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@public",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["gethashpassword",{"_index":740,"title":{},"body":{"injectables/UsersService.html":{}}}],["getrootpath",{"_index":520,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getting",{"_index":880,"title":{"index.html":{}},"body":{}}],["giay",{"_index":589,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["good",{"_index":607,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["graph",{"_index":934,"title":{},"body":{"index.html":{}}}],["group",{"_index":867,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grow",{"_index":958,"title":{},"body":{"index.html":{}}}],["ha",{"_index":590,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["haha",{"_index":871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["handlegetaccount",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(dto",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":362,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":375,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hands",{"_index":928,"title":{},"body":{"index.html":{}}}],["handy",{"_index":915,"title":{},"body":{"index.html":{}}}],["hash",{"_index":753,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":779,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":765,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":771,"title":{},"body":{"injectables/UsersService.html":{}}}],["hay",{"_index":483,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["head",{"_index":471,"title":{},"body":{"injectables/JwtStrategy-1.html":{}}}],["header",{"_index":454,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["help",{"_index":941,"title":{},"body":{"index.html":{}}}],["hendlelogout",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["hendlelogout(response",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["here",{"_index":966,"title":{},"body":{"index.html":{}}}],["hierarchy",{"_index":557,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["home",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["host",{"_index":332,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["httponly",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://github.com/ntthanh2603",{"_index":627,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["https://nestjs.com",{"_index":971,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["hình",{"_index":450,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["hơn",{"_index":594,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["id",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":461,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["image",{"_index":577,"title":{},"body":{"injectables/MulterConfigService.html":{},"miscellaneous/enumerations.html":{}}}],["image's",{"_index":581,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":537,"title":{},"body":{"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["inject",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":76,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":762,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(user",{"_index":768,"title":{},"body":{"injectables/UsersService.html":{}}}],["installcompile",{"_index":897,"title":{},"body":{"index.html":{}}}],["int",{"_index":676,"title":{},"body":{"entities/User.html":{}}}],["interact",{"_index":935,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":652,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":659,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":345,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":346,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["invalid",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["is_public_key",{"_index":385,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":509,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isemail()@isstring()@isnotempty({message",{"_index":611,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["isglobal",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":510,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty({message",{"_index":489,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["isoptional",{"_index":630,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["ispublic",{"_index":416,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":511,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isvalidpassword",{"_index":743,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidpassword(password",{"_index":752,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":552,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["iuser",{"_index":91,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["job",{"_index":951,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":953,"title":{},"body":{"index.html":{}}}],["join",{"_index":964,"title":{},"body":{"index.html":{}}}],["jpg|jpeg|png|gif",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["jwt",{"_index":394,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":356,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":459,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["jwtmodule",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":188,"title":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":501,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["kamil",{"_index":969,"title":{},"body":{"index.html":{}}}],["không",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["khẩu",{"_index":498,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["kiểm",{"_index":481,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["l",{"_index":401,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["last",{"_index":622,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["last_name",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["learn",{"_index":919,"title":{},"body":{"index.html":{}}}],["legend",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":974,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":956,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":949,"title":{},"body":{"index.html":{}}}],["local",{"_index":475,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":472,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":189,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":551,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["login",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login')@post('/login')@apibody({type",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(dto",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuserdto",{"_index":101,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["logout",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(response",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":950,"title":{},"body":{"index.html":{}}}],["loop",{"_index":946,"title":{},"body":{"index.html":{}}}],["love",{"_index":870,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lược",{"_index":446,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["lại",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["lớn",{"_index":597,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["m",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["male",{"_index":862,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["map",{"_index":648,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":655,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":631,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["max(100",{"_index":638,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["maxage",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxlength",{"_index":512,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["maxlength(10",{"_index":518,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["maxlength(100",{"_index":637,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["maxlength(15",{"_index":703,"title":{},"body":{"entities/User.html":{}}}],["maxlength(20",{"_index":634,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["maxsize",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["mediatype",{"_index":854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["member",{"_index":865,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["membertype",{"_index":855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["message",{"_index":491,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":405,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["min",{"_index":632,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["min(1",{"_index":639,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength",{"_index":513,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["minlength(2",{"_index":633,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(2)@maxlength(20)@isstring()@isnotempty({message",{"_index":614,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(5",{"_index":636,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["minlength(8",{"_index":517,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{}}}],["minlength(8)@maxlength(10)@isstring()@isnotempty({message",{"_index":625,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["miscellaneous",{"_index":851,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["mit",{"_index":955,"title":{},"body":{"index.html":{}}}],["mode",{"_index":902,"title":{},"body":{"index.html":{}}}],["module",{"_index":31,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":33,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":920,"title":{},"body":{"index.html":{}}}],["multer",{"_index":534,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multerconfigservice",{"_index":201,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/MulterConfigService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["multermodule",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["multermodule.registerasync",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["multermoduleoptions",{"_index":524,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":532,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mysql2",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":970,"title":{},"body":{"index.html":{}}}],["mật",{"_index":497,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["mọi",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":940,"title":{},"body":{"index.html":{}}}],["nest",{"_index":891,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":973,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":644,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":917,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":383,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/MulterConfigService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":327,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newaccesstoken",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["newregister",{"_index":789,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["newuser.address",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.age",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.bio",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.email",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.first_name",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.gender",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.id",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.last_name",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.website",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":653,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":654,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{}}}],["nghĩa",{"_index":444,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["người",{"_index":463,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["nh",{"_index":399,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["node.js",{"_index":883,"title":{},"body":{"index.html":{}}}],["noi",{"_index":591,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["npm",{"_index":896,"title":{},"body":{"index.html":{}}}],["null",{"_index":704,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{}}}],["number",{"_index":350,"title":{},"body":{"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["nơi",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["object",{"_index":426,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["observable",{"_index":646,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["occurred",{"_index":424,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["offer",{"_index":952,"title":{},"body":{"index.html":{}}}],["official",{"_index":930,"title":{},"body":{"index.html":{}}}],["old",{"_index":800,"title":{},"body":{"injectables/UsersService.html":{}}}],["open",{"_index":957,"title":{},"body":{"index.html":{}}}],["optional",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["otherwise",{"_index":432,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":978,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":823,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":80,"title":{},"body":{"injectables/AppService.html":{}}}],["param",{"_index":412,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parent",{"_index":556,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["parser",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":942,"title":{},"body":{"index.html":{}}}],["passport",{"_index":442,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":440,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":435,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{}}}],["passpost/jwt.strategy",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{}}}],["passpost/local.strategy",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["passpoststrategy",{"_index":447,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["passthrough",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":719,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch()@responsemessage('update",{"_index":716,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":536,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.basename(file.originalname",{"_index":584,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":580,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.join(this.getrootpath",{"_index":574,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["payload.sub",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["permission",{"_index":564,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["pg",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["phép",{"_index":396,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["please",{"_index":923,"title":{},"body":{"index.html":{}}}],["port",{"_index":334,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/enumerations.html":{}}}],["post('/login",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout')@responsemessage('logout",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":331,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["posttype",{"_index":856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":700,"title":{},"body":{"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":690,"title":{},"body":{"entities/User.html":{}}}],["privacy",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["privacy'})@isoptional",{"_index":667,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["privacytype",{"_index":353,"title":{},"body":{"interfaces/IUser.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["privacytype.public",{"_index":669,"title":{},"body":{"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["private",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["process",{"_index":410,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["process.cwd",{"_index":538,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["processnewtoken(refreshtoken",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["production",{"_index":904,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":882,"title":{},"body":{"index.html":{}}}],["project",{"_index":894,"title":{},"body":{"index.html":{}}}],["promise",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["properties",{"_index":348,"title":{"properties.html":{}},"body":{"interfaces/IUser.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["protected",{"_index":868,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["provide",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":429,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["provider",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["public()@get(':user_id')@responsemessage('user",{"_index":712,"title":{},"body":{"controllers/UsersController.html":{}}}],["public()@responsemessage('get",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('register",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('user",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":575,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["qua",{"_index":398,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["questions",{"_index":921,"title":{},"body":{"index.html":{}}}],["reactionposttype",{"_index":857,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reactiontype",{"_index":858,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["read",{"_index":965,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["real",{"_index":936,"title":{},"body":{"index.html":{}}}],["recursive",{"_index":540,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["reflect",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":364,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(dto",{"_index":755,"title":{},"body":{"injectables/UsersService.html":{}}}],["register(user",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto",{"_index":114,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["relationshiptype",{"_index":859,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["repository",{"_index":746,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req?.headers?.folder_type",{"_index":571,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.user",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":550,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["res",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":913,"title":{},"body":{"index.html":{}}}],["response",{"_index":102,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('access_token",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":650,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage('get",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('logout",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('update",{"_index":728,"title":{},"body":{"controllers/UsersController.html":{}}}],["responsemessage('user",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["roletype",{"_index":860,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["route",{"_index":389,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["run",{"_index":898,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":647,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":649,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["sad",{"_index":873,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["salt",{"_index":769,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":559,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["scalable",{"_index":887,"title":{},"body":{"index.html":{}}}],["secret",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":462,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["select",{"_index":791,"title":{},"body":{"injectables/UsersService.html":{}}}],["server",{"_index":888,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public_key",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":895,"title":{},"body":{"index.html":{}}}],["side",{"_index":889,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":960,"title":{},"body":{"index.html":{}}}],["src/.../customize.ts",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helper.enum.ts",{"_index":853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:44",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:66",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:73",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:87",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:107",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:150",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:25",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:33",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:42",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:89",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":357,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":473,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":434,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:13",{"_index":437,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:27",{"_index":439,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passpost/jwt.strategy.ts",{"_index":468,"title":{},"body":{"injectables/JwtStrategy-1.html":{},"coverage.html":{}}}],["src/auth/passpost/jwt.strategy.ts:13",{"_index":469,"title":{},"body":{"injectables/JwtStrategy-1.html":{}}}],["src/auth/passpost/jwt.strategy.ts:26",{"_index":470,"title":{},"body":{"injectables/JwtStrategy-1.html":{}}}],["src/auth/passpost/local.strategy.ts",{"_index":476,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passpost/local.strategy.ts:15",{"_index":480,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passpost/local.strategy.ts:9",{"_index":478,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/multer.config",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["src/core/multer.config.ts",{"_index":519,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/core/multer.config.ts:12",{"_index":531,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/core/multer.config.ts:15",{"_index":526,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/core/multer.config.ts:39",{"_index":523,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/core/transform.interceptor.ts",{"_index":641,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:21",{"_index":658,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:24",{"_index":660,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/database/database.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["src/database/database.module.ts",{"_index":325,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.providers.ts",{"_index":813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["src/decorator/customize.ts",{"_index":815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/helper/helper.enum",{"_index":355,"title":{},"body":{"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["src/helper/helper.enum.ts",{"_index":861,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/main.ts",{"_index":816,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/users/dto/login",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":662,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["src/users/entities/user.entity.ts",{"_index":671,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:11",{"_index":683,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:16",{"_index":694,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:19",{"_index":679,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:22",{"_index":684,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:25",{"_index":692,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:28",{"_index":680,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:31",{"_index":699,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:34",{"_index":677,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:37",{"_index":689,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:40",{"_index":674,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:43",{"_index":695,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:46",{"_index":687,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:49",{"_index":686,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:52",{"_index":681,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:55",{"_index":698,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:58",{"_index":697,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:61",{"_index":696,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":691,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":707,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:27",{"_index":714,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:34",{"_index":718,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["src/users/users.interface.ts",{"_index":347,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":734,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["src/users/users.service.ts",{"_index":738,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:104",{"_index":758,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:13",{"_index":747,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":760,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":754,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":761,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":759,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:39",{"_index":750,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:45",{"_index":756,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:80",{"_index":751,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":900,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":903,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":905,"title":{},"body":{"index.html":{}}}],["started",{"_index":881,"title":{"index.html":{}},"body":{}}],["starter",{"_index":893,"title":{},"body":{"index.html":{}}}],["startus",{"_index":349,"title":{},"body":{"interfaces/IUser.html":{}}}],["statements",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":672,"title":{},"body":{"entities/User.html":{}}}],["statuscode",{"_index":643,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["statustype",{"_index":354,"title":{},"body":{"interfaces/IUser.html":{},"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["statustype.off",{"_index":705,"title":{},"body":{"entities/User.html":{}}}],["stay",{"_index":945,"title":{},"body":{"index.html":{}}}],["storage",{"_index":567,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":430,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string'})@apiproperty({example",{"_index":493,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["successful",{"_index":431,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["successfully",{"_index":542,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["super",{"_index":402,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":420,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":922,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":976,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":546,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["synchronize",{"_index":344,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":453,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["table",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":527,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["test",{"_index":908,"title":{},"body":{"index.html":{}}}],["test:covresources",{"_index":911,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":910,"title":{},"body":{"index.html":{}}}],["tests",{"_index":906,"title":{},"body":{"index.html":{}}}],["th",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["thanks",{"_index":959,"title":{},"body":{"index.html":{}}}],["this.appservice.home",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(dto",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":485,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('jwt_refresh_expire",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createrefreshtoken(payload",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":572,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.finduserbyid(user.id",{"_index":794,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.gethashpassword(dto.password",{"_index":780,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.reflector.get(response_message",{"_index":657,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":417,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.usersrepository.findone",{"_index":774,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findoneby",{"_index":776,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.save(newuser",{"_index":790,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.update",{"_index":773,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.finduserbyemail(email",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbyid(id",{"_index":727,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword(password",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(user",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateprofile(updateuserdto",{"_index":729,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validateuser(dto.email",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["thành",{"_index":623,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["thông",{"_index":465,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["thực",{"_index":393,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["time",{"_index":937,"title":{},"body":{"index.html":{}}}],["tin",{"_index":466,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["token",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["token')@get('/refresh",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["touch",{"_index":967,"title":{},"body":{"index.html":{}}}],["tr",{"_index":464,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["tra",{"_index":482,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["transformer",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["transforminterceptor",{"_index":651,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["trying",{"_index":562,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trên",{"_index":503,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["trích",{"_index":451,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["trống",{"_index":515,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["trống'})@apiproperty({example",{"_index":612,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["trống'})@isemail",{"_index":490,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["trống'})@minlength(8",{"_index":499,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["tuấn",{"_index":617,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["tuổi",{"_index":603,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["twitter",{"_index":972,"title":{},"body":{"index.html":{}}}],["type",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":701,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":326,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":737,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":330,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":892,"title":{},"body":{"index.html":{}}}],["tạo",{"_index":448,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["tới",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["tự'})@isoptional",{"_index":599,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["tự'})@isstring({message",{"_index":505,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["tự'})@maxlength(10",{"_index":502,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["tự'})@maxlength(100",{"_index":596,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["unauthorizedexception",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('token",{"_index":433,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception('username/password",{"_index":486,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":619,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["unique",{"_index":702,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":907,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":984,"title":{},"body":{"properties.html":{}}}],["updatedat",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["updateprofile",{"_index":744,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateprofile(dto",{"_index":757,"title":{},"body":{"injectables/UsersService.html":{}}}],["updates",{"_index":947,"title":{},"body":{"index.html":{}}}],["updateuser",{"_index":710,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuser(updateuserdto",{"_index":715,"title":{},"body":{"controllers/UsersController.html":{}}}],["updateuserdto",{"_index":661,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateusertoken",{"_index":741,"title":{},"body":{"injectables/UsersService.html":{}}}],["uploadedfile",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useclass",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["usefactory",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useinterceptors",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(fileinterceptor('avatar",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":93,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user')@post('/register')@useinterceptors(undefined)@apibody({type",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["user')@useinterceptors(undefined",{"_index":717,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.address",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.age",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.avatar",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.bio",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.createdat",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.deletedat",{"_index":792,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":488,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":496,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:19",{"_index":613,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:22",{"_index":507,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:26",{"_index":626,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:32",{"_index":665,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:33",{"_index":618,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:40",{"_index":624,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:41",{"_index":668,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:46",{"_index":610,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:47",{"_index":664,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:51",{"_index":666,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:55",{"_index":629,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:57",{"_index":663,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:61",{"_index":606,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:65",{"_index":621,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:71",{"_index":600,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.email",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.first_name",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.followed_count",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.follower_count",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.gender",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.last_name",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.privacy",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.updatedat",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.website",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["user@gmail.com",{"_index":494,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["user_id",{"_index":713,"title":{},"body":{"controllers/UsersController.html":{}}}],["userdb",{"_index":775,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":336,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":708,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":735,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":721,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":720,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":706,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":45,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":748,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":222,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":938,"title":{},"body":{"index.html":{}}}],["v",{"_index":387,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{}}}],["validate",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":479,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":438,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["validateuser",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":514,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"dependencies.html":{}}}],["value",{"_index":530,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":985,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":982,"title":{},"body":{"properties.html":{}}}],["video",{"_index":864,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["visit",{"_index":918,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":932,"title":{},"body":{"index.html":{}}}],["void",{"_index":528,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["watch",{"_index":901,"title":{},"body":{"index.html":{}}}],["website",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["website'})@minlength(5)@maxlength(100)@isoptional",{"_index":628,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["without",{"_index":582,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["working",{"_index":916,"title":{},"body":{"index.html":{}}}],["wow",{"_index":872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["x",{"_index":948,"title":{},"body":{"index.html":{}}}],["xuất",{"_index":452,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}}}],["xác",{"_index":392,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["you'd",{"_index":963,"title":{},"body":{"index.html":{}}}],["you're",{"_index":561,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["yêu",{"_index":390,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                home\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        home\n                        \n                    \n                \n            \n            \n                \n                        \n                    home()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Public } from './decorator/customize';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @Public()\n  home(): string {\n    return this.appService.home();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { DatabaseModule } from 'src/database/database.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true, // Để module config có thể sử dụng ở mọi nơi mà không cần import lại\n      envFilePath: '...env', // Đường dẫn tới file .env\n    }),\n    DatabaseModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    UsersModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                home\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        home\n                        \n                    \n                \n            \n            \n                \nhome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n\thome(): string {\n\t\treturn 'Home page!';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                            \n                                    \n                                    \n                                hendleLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/account')@ResponseMessage('Get user information')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(dto: LoginUserDto, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('User login')@Post('/login')@ApiBody({type: LoginUserDto})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Get user by refresh token')@Get('/refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(registerUserDto: RegisterUserDto, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Register a new user')@Post('/register')@UseInterceptors(undefined)@ApiBody({type: RegisterUserDto})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        hendleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    hendleLogout(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/logout')@ResponseMessage('Logout user')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  ParseFilePipeBuilder,\n  Post,\n  Req,\n  Res,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { Request, Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { LoginUserDto } from 'src/users/dto/login-user.dto';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n@ApiTags('Auth')\n@Controller('/auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Public()\n  @ResponseMessage('User login')\n  @Post('/login')\n  @ApiBody({ type: LoginUserDto })\n  handleLogin(\n    @Body() dto: LoginUserDto,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    return this.authService.login(dto, response);\n  }\n\n  @Public()\n  @ResponseMessage('Register a new user')\n  @Post('/register')\n  @UseInterceptors(FileInterceptor('avatar-user'))\n  @ApiBody({ type: RegisterUserDto })\n  handleRegister(\n    @Body() registerUserDto: RegisterUserDto,\n    @UploadedFile(\n      new ParseFilePipeBuilder()\n        .addFileTypeValidator({\n          fileType: /(jpg|jpeg|png|gif)$/,\n        })\n        .addMaxSizeValidator({\n          maxSize: 1000 * 1024,\n        })\n        .build({\n          errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n          fileIsRequired: false,\n        }),\n    )\n    file: Express.Multer.File,\n  ) {\n    return this.authService.register(registerUserDto, file);\n  }\n\n  @Get('/account')\n  @ResponseMessage('Get user information')\n  handleGetAccount(@User() user: IUser) {\n    return user;\n  }\n\n  @Public()\n  @ResponseMessage('Get user by refresh token')\n  @Get('/refresh')\n  handleRefreshToken(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const refreshToken = request.cookies['refresh_token'];\n\n    if (!refreshToken) {\n      throw new BadRequestException('Refresh token is missing');\n    }\n    return this.authService.processNewToken(refreshToken, response);\n  }\n\n  @Post('/logout')\n  @ResponseMessage('Logout user')\n  hendleLogout(\n    @Res({ passthrough: true }) response: Response,\n    @User() user: IUser,\n  ) {\n    return this.authService.logout(response, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { LocalStrategy } from './passpost/local.strategy';\nimport { JwtStrategy } from './passpost/jwt.strategy';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { AuthController } from './auth.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from 'src/core/multer.config';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: configService.get('JWT_ACCESS_EXPIRE'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                processNewToken\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n            \n                \ncreateRefreshToken(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginUserDto, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(response: Response, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processNewToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    processNewToken(refreshToken: string, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto, file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport {\n  BadRequestException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\n\nimport { UsersService } from 'src/users/users.service';\nimport { Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { LoginUserDto } from 'src/users/dto/login-user.dto';\nimport { User } from 'src/users/entities/user.entity';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n  ) {}\n\n  // Validate user\n  async validateUser(email: string, password: string): Promise {\n    const user = await this.usersService.findUserByEmail(email);\n    if (!user || !this.usersService.isValidPassword(password, user.password)) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n    return user;\n  }\n\n  createRefreshToken(payload) {\n    const refresh_token = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn: this.configService.get('JWT_REFRESH_EXPIRE'),\n    });\n\n    return refresh_token;\n  }\n\n  async login(dto: LoginUserDto, response: Response) {\n    const user = await this.validateUser(dto.email, dto.password);\n\n    const payload = {\n      id: user.id,\n      email: user.email,\n      avatar: user.avatar,\n      first_name: user.first_name,\n      last_name: user.last_name,\n      bio: user.bio,\n      website: user.website,\n      age: user.age,\n      gender: user.gender,\n      address: user.address,\n      privacy: user.privacy,\n      follower_count: user.follower_count,\n      followed_count: user.followed_count,\n      createdAt: user.createdAt,\n      updatedAt: user.updatedAt,\n    };\n\n    const refresh_token = this.createRefreshToken(payload);\n\n    await this.usersService.updateUserToken(refresh_token, user.id);\n\n    response.cookie('refresh_token', refresh_token, {\n      httpOnly: true,\n      maxAge: +this.configService.get('JWT_REFRESH_EXPIRE'),\n    });\n\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: {\n        id: user.id,\n        email: user.email,\n        first_name: user.first_name,\n        last_name: user.last_name,\n        bio: user.bio,\n        website: user.website,\n        age: user.age,\n        gender: user.gender,\n        addres: user.address,\n      },\n    };\n  }\n\n  // Register user\n  async register(user: RegisterUserDto, file: Express.Multer.File) {\n    const newUser = await this.usersService.register(user, file);\n\n    return {\n      user: {\n        id: newUser.id,\n        email: newUser.email,\n        first_name: newUser.first_name,\n        last_name: newUser.last_name,\n        bio: newUser.bio,\n        website: newUser.website,\n        age: newUser.age,\n        gender: newUser.gender,\n        addres: newUser.address,\n      },\n    };\n  }\n\n  async processNewToken(refreshToken: string, response: Response) {\n    try {\n      const payload = this.jwtService.verify(refreshToken, {\n        secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      });\n\n      if (!payload || !payload.sub) {\n        throw new BadRequestException('Invalid refresh token');\n      }\n\n      const user = await this.usersService.findUserByToken(refreshToken);\n\n      if (!user) {\n        throw new BadRequestException('User not found or token invalid');\n      }\n\n      const { id, email } = user;\n      const newAccessToken = this.jwtService.sign(\n        { id, email },\n        { expiresIn: '15m' },\n      );\n\n      response.cookie('access_token', newAccessToken, { httpOnly: true });\n\n      return {\n        access_token: newAccessToken,\n        user: {\n          id: user.id,\n          email: user.email,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          bio: user.bio,\n          website: user.website,\n          age: user.age,\n          gender: user.gender,\n          addres: user.address,\n        },\n      };\n    } catch {\n      throw new BadRequestException('Refresh token invalid or expired');\n    }\n  }\n\n  async logout(response: Response, user: IUser) {\n    await this.usersService.updateUserToken('', user.id);\n    response.clearCookie('refresh_token');\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\n\nDATA_SOURCE \n\nDATA_SOURCE \n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDATA_SOURCE  -->\n\nDatabaseModule->DATA_SOURCE \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            DATA_SOURCE\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DatabaseProviders } from './database.providers';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        type: 'postgres',\n        host: configService.get('DATABASE_HOST'),\n        port: configService.get('DATABASE_PORT'),\n        username: configService.get('DATABASE_USERNAME'),\n        password: configService.get('DATABASE_PASSWORD'),\n        database: configService.get('DATABASE_NAME'),\n        entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n        synchronize: true,\n      }),\n    }),\n  ],\n  providers: [...DatabaseProviders],\n  exports: [...DatabaseProviders, 'DATA_SOURCE'],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            bio\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                        \n                                            followed_count\n                                        \n                                \n                                \n                                        \n                                            follower_count\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            privacy\n                                        \n                                \n                                \n                                        \n                                            startus\n                                        \n                                \n                                \n                                        \n                                            website\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followed_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followed_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        follower_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        follower_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         GenderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GenderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        privacy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        privacy:         PrivacyType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PrivacyType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startus:         StatusType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StatusType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GenderType, PrivacyType, StatusType } from 'src/helper/helper.enum';\n\nexport interface IUser {\n  id: string;\n  email: string;\n  avatar: string;\n  first_name: string;\n  last_name: string;\n  bio: string;\n  website: string;\n  age: number;\n  gender: GenderType;\n  address: string;\n  privacy: PrivacyType;\n  follower_count: number;\n  followed_count: number;\n  createdAt: Date;\n  startus: StatusType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:29\n                        \n                    \n\n\n            \n                \n                        3108b462-82ee-4b00-bcf0-e26c4709ab3c\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:53\n                        \n                    \n\n\n            \n                \n                        0c9ce90c-335a-4c7e-99be-072d02e22adc\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from 'src/decorator/customize';\n\n/*\n  - Bảo vệ các route yêu cầu xác thực JWT, cho phép bỏ qua các route được đánh dấu là public.\n*/\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  /*************  ✨ Codeium Command ⭐  *************/\n  /**\n   * CanActivate method to check if the current route is public or not.\n   * If the route is public, it will bypass the authentication process.\n   * If the route is not public, it will check if the user is authenticated.\n   * @param context The execution context of the request.\n   * @returns true if the user is authenticated and allowed to access the route.\n   *          false if the user is not authenticated or the route is not public.\n   */\n  /******  3108b462-82ee-4b00-bcf0-e26c4709ab3c  *******/\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  /*************  ✨ Codeium Command ⭐  *************/\n  /**\n   * This method is called when the authentication process completes.\n   * If an error occurred or the user is not authenticated, it will throw an exception.\n   * If the user is authenticated, it will return the user object.\n   * @param err The error that occurred during the authentication process.\n   * @param user The authenticated user.\n   * @param info Additional information provided by the authentication strategy.\n   * @returns The authenticated user if the authentication process was successful.\n   *          Otherwise, it will throw an exception.\n   */\n  /******  0c9ce90c-335a-4c7e-99be-072d02e22adc  *******/\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException('Token invalid');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { UsersService } from 'src/users/users.service';\nimport { IUser } from 'src/users/users.interface';\n\n/*\n  - JwtStrategy: Dùng để định nghĩa chiến lược xác thực\n  - Dùng PasspostStrategy để tạo chiến lược xác thực\n*/\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private usersService: UsersService,\n  ) {\n    super({\n      // Cấu hình chiến lược để trích xuất JWT từ header Authorization dưới dạng bearer token\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  // Xác thực payload người dùng và trả về thông tin\n  async validate(payload: IUser) {\n    // const { id, email, first_name, last_name } = payload;\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy-1.html":{"url":"injectables/JwtStrategy-1.html","title":"injectable - JwtStrategy-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passpost/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passpost/jwt.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passpost/jwt.strategy.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { UsersService } from 'src/users/users.service';\nimport { IUser } from 'src/users/users.interface';\n\n/*\n  - JwtStrategy: Dùng để định nghĩa chiến lược xác thực\n  - Dùng PasspostStrategy để tạo chiến lược xác thực\n*/\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private usersService: UsersService,\n  ) {\n    super({\n      // Cấu hình chiến lược để trích xuất JWT từ headẻ Authorization dưới dạng bearer token\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n  // Xác thực payload người dùng và trả về thông tin\n  async validate(payload: IUser) {\n    // const { id, email, first_name, last_name } = payload;\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n/*\n    - Bảo vệ các route yêu câù xác thực local\n*/\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passpost/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passpost/local.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passpost/local.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { User } from 'src/users/entities/user.entity';\n\n// Chiến thực xác thực local\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  // Kiểm tra email, password đúng hay chưa\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser(email, password);\n    if (!user) {\n      throw new UnauthorizedException('Username/Password invalid');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/login-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email không được trống'})@IsEmail({}, {message: 'Email không đúng định dạng'})@IsString({message: 'Type email is string'})@ApiProperty({example: 'user@gmail.com', description: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/login-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mật khẩu không được trống'})@MinLength(8, {message: 'Mật khẩu không được dưới 8 kí tự'})@MaxLength(10, {message: 'Mật Khẩu không được trên 10 kí tự'})@IsString({message: 'Type password is string'})@ApiProperty({example: '12345678', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/login-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class LoginUserDto {\n  @IsNotEmpty({ message: 'Email không được trống' })\n  @IsEmail({}, { message: 'Email không đúng định dạng' })\n  @IsString({ message: 'Type email is string' })\n  @ApiProperty({ example: 'user@gmail.com', description: 'email' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Mật khẩu không được trống' })\n  @MinLength(8, { message: 'Mật khẩu không được dưới 8 kí tự' })\n  @MaxLength(10, { message: 'Mật Khẩu không được trên 10 kí tự' })\n  @IsString({ message: 'Type password is string' })\n  @ApiProperty({ example: '12345678', description: 'password' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/multer.config.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/multer.config.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/core/multer.config.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  getRootPath = () => {\n    return process.cwd();\n  };\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n      if (!error) {\n        console.log('Directory successfully created, or it already exists.');\n        return;\n      }\n      switch (error.code) {\n        case 'EEXIST':\n          // Error:\n          // Requested location already exists, but it's not a directory.\n          break;\n        case 'ENOTDIR':\n          // Error:\n          // The parent hierarchy contains a file with the same name as the dir\n          // you're trying to create.\n          break;\n        default:\n          // Some other error like permission denied.\n          console.error(error);\n          break;\n      }\n    });\n  }\n\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          const folder = req?.headers?.folder_type ?? 'default';\n          this.ensureExists(`public/images/${folder}`);\n          cb(null, path.join(this.getRootPath(), `public/images/${folder}`));\n        },\n        filename: (req, file, cb) => {\n          //get image extension\n          let extName = path.extname(file.originalname);\n          //get image's name (without extension)\n          let baseName = path.basename(file.originalname, extName);\n          let finalName = `${baseName}-${Date.now()}${extName}`;\n          cb(null, finalName);\n        },\n      }),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                bio\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                first_name\n                            \n                            \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                last_name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Cau Giay, Ha Noi', description: 'address'})@MinLength(5, {message: 'Địa chỉ không được nhỏ hơn 5 ký tự'})@MaxLength(100, {message: 'Địa chỉ không được lớn hơn 100 ký tự'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 20, description: 'age'})@Max(100, {message: 'Tuổi không được lớn hơn 100'})@Min(1, {message: 'Tuổi không được nhỏ hơn 1'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Good boy', description: 'bio'})@MinLength(5, {message: 'Bio không được nhỏ hơn 5 ký tự'})@MaxLength(100, {message: 'Bio không được lớn hơn 100 ký tự'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsString()@IsNotEmpty({message: 'Email không được trống'})@ApiProperty({example: 'user@gmail.com', description: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(2)@MaxLength(20)@IsString()@IsNotEmpty({message: 'First name not empty'})@ApiProperty({example: 'Tuấn', description: 'Your first name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenderType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'gender'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(2)@MaxLength(20)@IsString()@IsNotEmpty({message: 'Last name not empty'})@ApiProperty({example: 'Thành', description: 'Your last name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(8)@MaxLength(10)@IsString()@IsNotEmpty({message: 'Mật khẩu không được trống'})@ApiProperty({example: '12345678', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://github.com/ntthanh2603', description: 'website'})@MinLength(5)@MaxLength(100)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Max,\n  MaxLength,\n  Min,\n  MinLength,\n} from 'class-validator';\nimport { GenderType } from 'src/helper/helper.enum';\n\nexport class RegisterUserDto {\n  @IsEmail()\n  @IsString()\n  @IsNotEmpty({ message: 'Email không được trống' })\n  @ApiProperty({ example: 'user@gmail.com', description: 'email' })\n  email: string;\n\n  @MinLength(8)\n  @MaxLength(10)\n  @IsString()\n  @IsNotEmpty({ message: 'Mật khẩu không được trống' })\n  @ApiProperty({ example: '12345678', description: 'password' })\n  password: string;\n\n  @MinLength(2)\n  @MaxLength(20)\n  @IsString()\n  @IsNotEmpty({ message: 'First name not empty' })\n  @ApiProperty({ example: 'Tuấn', description: 'Your first name' })\n  first_name: string;\n\n  @MinLength(2)\n  @MaxLength(20)\n  @IsString()\n  @IsNotEmpty({ message: 'Last name not empty' })\n  @ApiProperty({ example: 'Thành', description: 'Your last name' })\n  last_name: string;\n\n  @ApiProperty({ example: 'Good boy', description: 'bio' })\n  @MinLength(5, { message: 'Bio không được nhỏ hơn 5 ký tự' })\n  @MaxLength(100, { message: 'Bio không được lớn hơn 100 ký tự' })\n  @IsOptional()\n  bio: string;\n\n  @ApiProperty({\n    example: 'https://github.com/ntthanh2603',\n    description: 'website',\n  })\n  @MinLength(5)\n  @MaxLength(100)\n  @IsOptional()\n  website: string;\n\n  @ApiProperty({ example: 20, description: 'age' })\n  @Max(100, { message: 'Tuổi không được lớn hơn 100' })\n  @Min(1, { message: 'Tuổi không được nhỏ hơn 1' })\n  @IsOptional()\n  age: number;\n\n  @ApiProperty({ example: GenderType.MALE, description: 'gender' })\n  @IsOptional()\n  gender: GenderType;\n\n  @ApiProperty({ example: 'Cau Giay, Ha Noi', description: 'address' })\n  @MinLength(5, { message: 'Địa chỉ không được nhỏ hơn 5 ký tự' })\n  @MaxLength(100, { message: 'Địa chỉ không được lớn hơn 100 ký tự' })\n  @IsOptional()\n  address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  // message: string;\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n  statusCode: number;\n  // message: string;\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                bio\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                first_name\n                            \n                            \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                last_name\n                            \n                            \n                                    \n                                    \n                                privacy\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Cau Giay, Ha Noi', description: 'address'})@MinLength(5, {message: 'Địa chỉ không được nhỏ hơn 5 ký tự'})@MaxLength(100, {message: 'Địa chỉ không được lớn hơn 100 ký tự'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 20, description: 'age'})@Max(100, {message: 'Tuổi không được lớn hơn 100'})@Min(1, {message: 'Tuổi không được nhỏ hơn 1'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Good boy', description: 'bio'})@MinLength(5, {message: 'Bio không được nhỏ hơn 5 ký tự'})@MaxLength(100, {message: 'Bio không được lớn hơn 100 ký tự'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(2)@MaxLength(20)@IsString()@IsNotEmpty({message: 'First name not empty'})@ApiProperty({example: 'Tuấn', description: 'Your first name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenderType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'gender'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(2)@MaxLength(20)@IsString()@IsNotEmpty({message: 'Last name not empty'})@ApiProperty({example: 'Thành', description: 'Your last name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        privacy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PrivacyType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'privacy'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'https://github.com/ntthanh2603', description: 'website'})@MinLength(5)@MaxLength(100)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Max,\n  MaxLength,\n  Min,\n  MinLength,\n} from 'class-validator';\nimport { GenderType, PrivacyType } from 'src/helper/helper.enum';\n\nexport class UpdateUserDto {\n  @MinLength(2)\n  @MaxLength(20)\n  @IsString()\n  @IsNotEmpty({ message: 'First name not empty' })\n  @ApiProperty({ example: 'Tuấn', description: 'Your first name' })\n  first_name: string;\n\n  @MinLength(2)\n  @MaxLength(20)\n  @IsString()\n  @IsNotEmpty({ message: 'Last name not empty' })\n  @ApiProperty({ example: 'Thành', description: 'Your last name' })\n  last_name: string;\n\n  @ApiProperty({ example: 'Good boy', description: 'bio' })\n  @MinLength(5, { message: 'Bio không được nhỏ hơn 5 ký tự' })\n  @MaxLength(100, { message: 'Bio không được lớn hơn 100 ký tự' })\n  @IsOptional()\n  bio: string;\n\n  @ApiProperty({\n    example: 'https://github.com/ntthanh2603',\n    description: 'website',\n  })\n  @MinLength(5)\n  @MaxLength(100)\n  @IsOptional()\n  website: string;\n\n  @ApiProperty({ example: 20, description: 'age' })\n  @Max(100, { message: 'Tuổi không được lớn hơn 100' })\n  @Min(1, { message: 'Tuổi không được nhỏ hơn 1' })\n  @IsOptional()\n  age: number;\n\n  @ApiProperty({ example: GenderType.MALE, description: 'gender' })\n  @IsOptional()\n  gender: GenderType;\n\n  @ApiProperty({ example: 'Cau Giay, Ha Noi', description: 'address' })\n  @MinLength(5, { message: 'Địa chỉ không được nhỏ hơn 5 ký tự' })\n  @MaxLength(100, { message: 'Địa chỉ không được lớn hơn 100 ký tự' })\n  @IsOptional()\n  address: string;\n\n  @ApiProperty({ example: PrivacyType.PUBLIC, description: 'privacy' })\n  @IsOptional()\n  privacy: PrivacyType;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                avatar\n                            \n                            \n                                    \n                                bio\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                followed_count\n                            \n                            \n                                    \n                                follower_count\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                privacy\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                website\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        followed_count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        follower_count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: 0})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenderType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: GenderType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@MinLength(8)@MaxLength(15)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        privacy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PrivacyType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: PrivacyType, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatusType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: StatusType, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        website\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { MaxLength, MinLength } from 'class-validator';\nimport { GenderType, PrivacyType, StatusType } from 'src/helper/helper.enum';\nimport { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column()\n  @MinLength(8)\n  @MaxLength(15)\n  password: string;\n\n  @Column({ default: null })\n  avatar: string;\n\n  @Column()\n  first_name: string;\n\n  @Column()\n  last_name: string;\n\n  @Column({ default: null })\n  bio: string;\n\n  @Column({ default: null })\n  website: string;\n\n  @Column({ type: 'int' })\n  age: number;\n\n  @Column({ type: 'enum', enum: GenderType })\n  gender: GenderType;\n\n  @Column()\n  address: string;\n\n  @Column({ type: 'enum', enum: PrivacyType, default: PrivacyType.PUBLIC })\n  privacy: PrivacyType;\n\n  @Column({ default: 0 })\n  follower_count: number;\n\n  @Column({ default: 0 })\n  followed_count: number;\n\n  @Column()\n  createdAt: Date;\n\n  @Column({ default: null })\n  updatedAt: Date;\n\n  @Column({ type: 'enum', enum: StatusType, default: StatusType.OFF })\n  status: StatusType;\n\n  @Column({ default: null })\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                findUserById\n                            \n                            \n                                    \n                                    \n                                    \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':user_id')@ResponseMessage('User by user_id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(updateUserDto: UpdateUserDto, user: IUser, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update User')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Body,\n  Param,\n  Patch,\n  UploadedFile,\n  ParseFilePipeBuilder,\n  HttpStatus,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './users.interface';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n@ApiTags('Users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Public()\n  @Get(':user_id')\n  @ResponseMessage('User by user_id')\n  findUserById(@Param('id') id: string) {\n    return this.usersService.findUserById(id);\n  }\n\n  @Patch()\n  @ResponseMessage('Update User')\n  @UseInterceptors(FileInterceptor('avatar-user'))\n  updateUser(\n    @Body() updateUserDto: UpdateUserDto,\n    @User() user: IUser,\n    @UploadedFile(\n      new ParseFilePipeBuilder()\n        .addFileTypeValidator({\n          fileType: /(jpg|jpeg|png|gif)$/,\n        })\n        .addMaxSizeValidator({\n          maxSize: 1000 * 1024,\n        })\n        .build({\n          errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n          fileIsRequired: false,\n        }),\n    )\n    file: Express.Multer.File,\n  ) {\n    return this.usersService.updateProfile(updateUserDto, user, file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { DatabaseModule } from 'src/database/database.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\nimport { MulterConfigService } from 'src/core/multer.config';\nimport { MulterModule } from '@nestjs/platform-express';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    DatabaseModule,\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    }),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findUserByEmail\n                            \n                            \n                                    Async\n                                findUserById\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n            \n                \nisValidPassword(password: string, hash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(dto: RegisterUserDto, file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateProfile(dto: UpdateUserDto, user: IUser, file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './entities/user.entity';\nimport { compareSync, genSaltSync, hashSync } from 'bcrypt';\nimport { RegisterUserDto } from './dto/create-user.dto';\nimport { IUser } from './users.interface';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { PrivacyType } from 'src/helper/helper.enum';\nimport * as fs from 'fs';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private usersRepository: Repository,\n  ) {}\n\n  getHashPassword = (password: string) => {\n    const salt = genSaltSync(10);\n    const hash = hashSync(password, salt);\n    return hash;\n  };\n\n  isValidPassword(password: string, hash: string) {\n    return compareSync(password, hash);\n  }\n\n  updateUserToken = (refreshToken: string, id: string) => {\n    return this.usersRepository.update({ id }, { refreshToken });\n  };\n\n  findUserByToken = async (refreshToken: string) => {\n    return await this.usersRepository.findOne({\n      where: { refreshToken: refreshToken },\n    });\n  };\n\n  async findUserByEmail(email: string) {\n    return await this.usersRepository.findOne({\n      where: { email },\n    });\n  }\n\n  async register(dto: RegisterUserDto, file: Express.Multer.File) {\n    const userDb = await this.usersRepository.findOneBy({ email: dto.email });\n\n    if (userDb) {\n      throw new BadRequestException(`Email: ${dto.email} already exists`);\n    }\n\n    const hashPassword = this.getHashPassword(dto.password);\n\n    let avatar = '';\n\n    if (!file) avatar = null;\n    else avatar = file.path;\n\n    const newUser = {\n      email: dto.email,\n      password: hashPassword,\n      avatar,\n      first_name: dto.first_name,\n      last_name: dto.last_name,\n      bio: dto.bio,\n      website: dto.website,\n      age: dto.age,\n      gender: dto.gender,\n      address: dto.address,\n\n      createdAt: new Date(),\n      privacy: PrivacyType.PUBLIC,\n    };\n\n    const newRegister = await this.usersRepository.save(newUser);\n\n    return newRegister;\n  }\n\n  async findUserById(id: string) {\n    const user = await this.usersRepository.findOne({\n      where: { id },\n      select: [\n        'email',\n\n        'age',\n        'avatar',\n        'gender',\n        'address',\n\n        'createdAt',\n        'updatedAt',\n\n        'privacy',\n      ],\n    });\n\n    if (!user) return null;\n\n    // if (!user.deletedAt) return user;\n    return null;\n  }\n\n  async updateProfile(\n    dto: UpdateUserDto,\n    user: IUser,\n    file: Express.Multer.File,\n  ) {\n    if (!file) {\n      return await this.usersRepository.update(\n        { id: user.id },\n        {\n          ...dto,\n        },\n      );\n    } else {\n      const findUser = await this.findUserById(user.id);\n      const avatar = findUser.avatar;\n\n      if (avatar) {\n        try {\n          if (fs.existsSync(avatar)) {\n            fs.unlinkSync(avatar);\n          }\n        } catch (error) {\n          console.error('Error deleting old avatar:', error);\n        }\n      }\n      return await this.usersRepository.update(\n        { id: user.id },\n        {\n          ...dto,\n          avatar: file.path,\n        },\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passpost/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passpost/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/database/database.providers.ts\n            \n            variable\n            DatabaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            mysql2 : ^3.11.3\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.13.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GenderType   (src/.../helper.enum.ts)\n                        \n                        \n                            MediaType   (src/.../helper.enum.ts)\n                        \n                        \n                            MemberType   (src/.../helper.enum.ts)\n                        \n                        \n                            PostType   (src/.../helper.enum.ts)\n                        \n                        \n                            PrivacyType   (src/.../helper.enum.ts)\n                        \n                        \n                            ReactionPostType   (src/.../helper.enum.ts)\n                        \n                        \n                            ReactionType   (src/.../helper.enum.ts)\n                        \n                        \n                            RelationshipType   (src/.../helper.enum.ts)\n                        \n                        \n                            RoleType   (src/.../helper.enum.ts)\n                        \n                        \n                            StatusType   (src/.../helper.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/helper/helper.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        GenderType\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : male\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : female\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : other\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MediaType\n                    \n                \n                        \n                            \n                                 IMAGE\n                            \n                        \n                        \n                            \n                                Value : image\n                            \n                        \n                        \n                            \n                                 VIDEO\n                            \n                        \n                        \n                            \n                                Value : video\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        MemberType\n                    \n                \n                        \n                            \n                                 MEMBER\n                            \n                        \n                        \n                            \n                                Value : member\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PostType\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 GROUP\n                            \n                        \n                        \n                            \n                                Value : group\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PrivacyType\n                    \n                \n                        \n                            \n                                 PUBLIC\n                            \n                        \n                        \n                            \n                                Value : public\n                            \n                        \n                        \n                            \n                                 PRIVATE\n                            \n                        \n                        \n                            \n                                Value : private\n                            \n                        \n                        \n                            \n                                 PROTECTED\n                            \n                        \n                        \n                            \n                                Value : protected\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ReactionPostType\n                    \n                \n                        \n                            \n                                 COMMENT\n                            \n                        \n                        \n                            \n                                Value : comment\n                            \n                        \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ReactionType\n                    \n                \n                        \n                            \n                                 LIKE\n                            \n                        \n                        \n                            \n                                Value : like\n                            \n                        \n                        \n                            \n                                 LOVE\n                            \n                        \n                        \n                            \n                                Value : love\n                            \n                        \n                        \n                            \n                                 HAHA\n                            \n                        \n                        \n                            \n                                Value : haha\n                            \n                        \n                        \n                            \n                                 WOW\n                            \n                        \n                        \n                            \n                                Value : wow\n                            \n                        \n                        \n                            \n                                 SAD\n                            \n                        \n                        \n                            \n                                Value : sad\n                            \n                        \n                        \n                            \n                                 ANGRY\n                            \n                        \n                        \n                            \n                                Value : angry\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RelationshipType\n                    \n                \n                        \n                            \n                                 FRIEND\n                            \n                        \n                        \n                            \n                                Value : friend\n                            \n                        \n                        \n                            \n                                 FOLLOW\n                            \n                        \n                        \n                            \n                                Value : follow\n                            \n                        \n                        \n                            \n                                 FOLLOWER\n                            \n                        \n                        \n                            \n                                Value : follower\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RoleType\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        StatusType\n                    \n                \n                        \n                            \n                                 ON\n                            \n                        \n                        \n                            \n                                Value : on\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                Value : off\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_exports\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nDATA_SOURCE \n\nDATA_SOURCE \n\nDATA_SOURCE  -->\n\nDatabaseModule->DATA_SOURCE \n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DatabaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DatabaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Provider[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'DATA_SOURCE',\n    useFactory: async (configService: ConfigService) => {\n      const dataSource = new DataSource({\n        type: 'postgres',\n        host: configService.get('DATABASE_HOST'),\n        port: configService.get('DATABASE_PORT'),\n        username: configService.get('DATABASE_USERNAME'),\n        password: configService.get('DATABASE_PASSWORD'),\n        database: configService.get('DATABASE_NAME'),\n        entities: [__dirname + '/../**/*.entity{.ts,.js}'],\n        synchronize: true,\n      });\n      return dataSource.initialize();\n    },\n    inject: [ConfigService],\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
